from django.contrib.gis.db import models
from django.contrib.auth.models import User
#import datetime
from django.utils import timezone

# Create your models here.
class Waypoint(models.Model):
    name = models.CharField(max_length=75,unique=True)
    company = models.CharField(max_length=75,null=True)
    project_id = models.CharField(max_length=150)
    project_naam = models.CharField(max_length=150,null=True)
    startdatum = models.DateTimeField(null=True)
    soortgef = models.CharField(max_length=50,null=True)
    x = models.DecimalField(max_digits=9, decimal_places=3,null=True)
    y = models.DecimalField(max_digits=9, decimal_places=3,null=True)
    z = models.DecimalField(max_digits=9, decimal_places=6)
    status = models.CharField(max_length=32,default="nog niet gecontroleerd")
    DateCreated = models.DateTimeField(auto_now_add=True, auto_now=False)
    DateMutated = models.DateTimeField(auto_now_add=False, auto_now=True, null=True)
    username = models.CharField(max_length=50,null=True)
    download_gef = models.CharField(max_length=150,null=True)
    geometry = models.PointField(srid=4326)
    objects = models.GeoManager()

    def __str__(self):
    	return '%s %s %s %s %s %s %s %s %s %s' % (self.name, self.company, self.projectid, self.startdatum,
                                           self.soortgef, self.x, self.y, self.z, self.geometry.x, self.geometry.y)

# info on fieldtypes: https://docs.djangoproject.com/en/1.8/ref/models/fields/
class Boring(models.Model):
    boring_id =	models.IntegerField(null=True)
    boringident	= models.CharField(max_length=50,null=True)
    bedrijf = models.CharField(max_length=50,null=True)
    project_id = models.CharField(max_length=150,null=True)
    project_naam = models.CharField(max_length=150,null=True)
    startdatum = models.DateTimeField(null=True)
    datum_boring = models.DateTimeField(null=True)
    x_rd = models.DecimalField(max_digits=9, decimal_places=3,null=True)
    y_rd = models.DecimalField(max_digits=9, decimal_places=3,null=True)
    mv_nap = models.DecimalField(max_digits=9, decimal_places=3,null=True)
    dwarspositie = models.CharField(max_length=20,null=True)
    type_boring	= models.CharField(max_length=20,null=True)
    methode_boring = models.CharField(max_length=20,null=True)
    einddiepte = models.DecimalField(max_digits=9, decimal_places=3,null=True)
    bestand_pdf	= models.CharField(max_length=150,unique=True,null=True)
    bestand_gef	= models.CharField(max_length=150,unique=True)
    bestand_grondonderzoek = models.CharField(max_length=250,null=True)
    bestanden_corsa = models.CharField(max_length=250,null=True)
    monstername = models.CharField(max_length=20,null=True)
    bestand_labproeven = models.CharField(max_length=250,null=True)
    gef_file = models.FileField(null=True) # models.BinaryField(null=True) Binary werkt niet: can't escape InMemoryUploadedFile to binary
    gef_file_bf = models.BinaryField(null=True)
    download_gef = models.CharField(max_length=150,null=True)
    status = models.CharField(max_length=32,default="nog niet gecontroleerd")
    DateCreated = models.DateTimeField(auto_now_add=True, auto_now=False)
    DateMutated = models.DateTimeField(auto_now_add=False, auto_now=True, null=True)
    username = models.CharField(max_length=50,null=True)
    geometry = models.PointField(srid=4326)  # 4326=wgs84?
    objects = models.GeoManager()

class Sondering(models.Model):
    sondering_id = models.IntegerField(null=True)
    sonderingident = models.CharField(max_length=50,null=True)
    x_rd = models.DecimalField(max_digits=9, decimal_places=3,null=True)
    y_rd = models.DecimalField(max_digits=9, decimal_places=3,null=True)
    mv_nap = models.DecimalField(max_digits=9, decimal_places=3,null=True)
    dwarspositie = models.CharField(max_length=20,null=True)
    sondeerklasse = models.CharField(max_length=20,null=True)
    datum_sondering = models.DateTimeField(null=True)
    bedrijf = models.CharField(max_length=50,null=True)
    project_id = models.CharField(max_length=150,null=True)
    project_naam = models.CharField(max_length=150,null=True)
    startdatum = models.DateTimeField(null=True)
    type_sondeeronderzoek = models.CharField(max_length=20,null=True)
    methode_sondering = models.CharField(max_length=100,null=True)
    einddiepte = models.DecimalField(max_digits=9, decimal_places=3,null=True)
    type_einddiepte = models.CharField(max_length=20,null=True)
    voorboring_aanwezig = models.CharField(max_length=20,null=True)
    bestand_sondering = models.CharField(max_length=50,null=True)
    bestand_pdf = models.CharField(max_length=150,unique=True,null=True)
    bestand_gef = models.CharField(max_length=150,unique=True)
    bestand_grondonderzoek = models.CharField(max_length=250,null=True)
    bestanden_corsa = models.CharField(max_length=250,null=True)
    gef_file = models.FileField(null=True) # models.BinaryField(null=True) Binary werkt niet: can't escape InMemoryUploadedFile to binary
    download_gef = models.CharField(max_length=150,null=True)
    status = models.CharField(max_length=32,default="nog niet gecontroleerd")
    DateCreated = models.DateTimeField(auto_now_add=True, auto_now=False)
    DateMutated = models.DateTimeField(auto_now_add=False, auto_now=True, null=True)
    username = models.CharField(max_length=50,null=True)
    geometry = models.PointField(srid=4326)  # 4326=wgs84?
    objects = models.GeoManager()

class Peilbuisput(models.Model):
    borehole_id	= models.IntegerField(null=True)
    boreholeident =	models.CharField(max_length=50,null=True)
    boring_id = models.ForeignKey(Boring)
    peilbuisraai_id = models.CharField(max_length=20, null=True)
    bedrijf = models.CharField(max_length=50,null=True)
    datum_plaatsing = models.DateTimeField(null=True)
    datum_verwijdering = models.DateTimeField(null=True)
    aanwezig = models.CharField(max_length=20,null=True)
    project_id = models.CharField(max_length=150,null=True)
    project_naam = models.CharField(max_length=150,null=True)
    startdatum = models.DateTimeField(null=True)
    x_rd = models.DecimalField(max_digits=9, decimal_places=3,null=True)
    y_rd = models.DecimalField(max_digits=9, decimal_places=3,null=True)
    mv_nap = models.DecimalField(max_digits=9, decimal_places=3,null=True)
    dwarspositie = models.CharField(max_length=20,null=True)
    type_peilbuisput = models.CharField(max_length=20,null=True)
    locatiebeschrijving = models.CharField(max_length=150,null=True)
    reden_plaatsing = models.CharField(max_length=150,null=True)
    aantal_peilbuizen = models.IntegerField(null=True)
    bestand_peilbuisput	= models.CharField(max_length=50,null=True)
    bestand_parent = models.CharField(max_length=50,null=True)
    bestand_gef	= models.CharField(max_length=250,unique=True)
    bestand_txt = models.CharField(max_length=250,null=True)
    bestand_grondonderzoek = models.CharField(max_length=250,null=True)
    gef_file = models.FileField(null=True) # models.BinaryField(null=True) Binary werkt niet: can't escape InMemoryUploadedFile to binary
    download_gef = models.CharField(max_length=150,null=True)
    status = models.CharField(max_length=32,default="nog niet gecontroleerd")
    DateCreated = models.DateTimeField(auto_now_add=True, auto_now=False)
    DateMutated = models.DateTimeField(auto_now_add=False, auto_now=True, null=True)
    username = models.CharField(max_length=50,null=True)
    geometry = models.PointField(srid=4326)  # 4326=wgs84?
    objects = models.GeoManager()

class Peilbuisgegevens(models.Model):
    peilbuis_id = models.IntegerField(null=True)
    peilbuisident = models.CharField(max_length=50,null=True)
    borehole_id = models.ForeignKey(Peilbuisput)
    project_id = models.CharField(max_length=150,null=True)
    project_naam = models.CharField(max_length=150,null=True)
    startdatum = models.DateTimeField(null=True)
    bovenkant_peilbuis = models.DecimalField(max_digits=9, decimal_places=3,null=True)
    lengte_peilbuis = models.DecimalField(max_digits=9, decimal_places=3,null=True)
    lengte_zandvang = models.DecimalField(max_digits=9, decimal_places=3,null=True)
    binnendiameter_mm = models.DecimalField(max_digits=9, decimal_places=3,null=True)
    bovenkant_filter = models.DecimalField(max_digits=9, decimal_places=3,null=True)
    onderkant_filter = models.DecimalField(max_digits=9, decimal_places=3,null=True)
    lengte_filter = models.DecimalField(max_digits=9, decimal_places=3,null=True)
    bestand_meetreeks = models.CharField(max_length=250,null=True)
    status = models.CharField(max_length=32,default="nog niet gecontroleerd")
    DateCreated = models.DateTimeField(auto_now_add=True, auto_now=False)
    DateMutated = models.DateTimeField(auto_now_add=False, auto_now=True, null=True)
    username = models.CharField(max_length=50,null=True)
    geometry = models.PointField(srid=4326,null=True)  # 4326=wgs84?
    objects = models.GeoManager()

class Projecten(models.Model):
    project_id = models.CharField(max_length=150, unique=True)
    project_name = models.CharField(max_length=150, null=True)
    startdatum = models.DateTimeField(null=True)
    project_status = models.CharField(max_length=32,default="in bewerking")
    opmerking = models.CharField(max_length=150, null=True)
    DateCreated = models.DateTimeField(auto_now_add=True, auto_now=False)
    DateMutated = models.DateTimeField(auto_now_add=False, auto_now=True, null=True)
    aantal_boringen = models.IntegerField(null=True)
    aantal_peilbuisputten = models.IntegerField(null=True)
    aantal_sonderingen = models.IntegerField(null=True)
    aantal_peilbuizen = models.IntegerField(null=True)
    user_id = models.ForeignKey(User)
    username = models.CharField(max_length=50,null=True)
    def __str__(self):
        return '%s %s'%(self.project_name, self.project_status)
